// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eProject3.Data;

#nullable disable

namespace eProject3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240719094008_fix")]
    partial class fix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eProject3.Models.Entities.AboutUs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("AboutUses");
                });

            modelBuilder.Entity("eProject3.Models.Entities.AboutUsChild", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("about_id")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("about_id");

                    b.ToTable("AboutUsChilds");
                });

            modelBuilder.Entity("eProject3.Models.Entities.AboutUsImage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("about_id")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("about_id");

                    b.ToTable("AboutUsImages");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Cause", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Causes");
                });

            modelBuilder.Entity("eProject3.Models.Entities.ContactUs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ContactUses");
                });

            modelBuilder.Entity("eProject3.Models.Entities.ContactUsEdit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ContactUsEdits");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Conversation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Donation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<string>("credit_card")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("expiration_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("payment_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("project_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("project_id");

                    b.HasIndex("user_id");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Gallery", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("project_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("project_id");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Like", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("project_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("project_id");

                    b.HasIndex("user_id");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("conversation_id")
                        .HasColumnType("int");

                    b.Property<string>("message_text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("sent_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("conversation_id");

                    b.HasIndex("user_id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Partner", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cause_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ownerTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("timeend")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("timestart")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("cause_id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("eProject3.Models.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eProject3.Models.Entities.AboutUsChild", b =>
                {
                    b.HasOne("eProject3.Models.Entities.AboutUs", "AboutUs")
                        .WithMany("AboutUsChilds")
                        .HasForeignKey("about_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AboutUs");
                });

            modelBuilder.Entity("eProject3.Models.Entities.AboutUsImage", b =>
                {
                    b.HasOne("eProject3.Models.Entities.AboutUs", "AboutUs")
                        .WithMany("AboutUsImages")
                        .HasForeignKey("about_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AboutUs");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Conversation", b =>
                {
                    b.HasOne("eProject3.Models.Entities.User", "User")
                        .WithMany("Conversations")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Donation", b =>
                {
                    b.HasOne("eProject3.Models.Entities.Project", "Project")
                        .WithMany("Donations")
                        .HasForeignKey("project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eProject3.Models.Entities.User", "User")
                        .WithMany("Donations")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Gallery", b =>
                {
                    b.HasOne("eProject3.Models.Entities.Project", "Project")
                        .WithMany("Galleries")
                        .HasForeignKey("project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Like", b =>
                {
                    b.HasOne("eProject3.Models.Entities.Project", "Project")
                        .WithMany("Likes")
                        .HasForeignKey("project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eProject3.Models.Entities.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Message", b =>
                {
                    b.HasOne("eProject3.Models.Entities.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("conversation_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eProject3.Models.Entities.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Project", b =>
                {
                    b.HasOne("eProject3.Models.Entities.Cause", "Cause")
                        .WithMany("Projects")
                        .HasForeignKey("cause_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cause");
                });

            modelBuilder.Entity("eProject3.Models.Entities.AboutUs", b =>
                {
                    b.Navigation("AboutUsChilds");

                    b.Navigation("AboutUsImages");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Cause", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Conversation", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("eProject3.Models.Entities.Project", b =>
                {
                    b.Navigation("Donations");

                    b.Navigation("Galleries");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("eProject3.Models.Entities.User", b =>
                {
                    b.Navigation("Conversations");

                    b.Navigation("Donations");

                    b.Navigation("Likes");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
