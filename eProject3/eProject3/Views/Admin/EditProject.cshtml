@model eProject3.Controllers.AdminController.ProjectViewModel

<link rel="stylesheet" href="~/css/AddProject.css" />
@* Css button back *@
<style>
    .btn {
        display: inline-block;
        font-weight: 400;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        user-select: none;
        border: 1px solid transparent;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        border-radius: 0.25rem;
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .btn-primary {
        color: #fff;
        background-color: #007bff;
        border-color: #007bff;
    }

        .btn-primary:hover {
            color: #fff;
            background-color: #0056b3;
            border-color: #004085;
        }

    .back-button {
        margin: 10px;
    }
</style>

<a asp-action="Projects" class="btn btn-primary back-button">Back</a>

<div class="mainHead">
    <div class="tilteLeft">
        <h1>Edit Project</h1>
        <p style="color: gray; padding-left: 5px">Version 2.0</p>
    </div>
    <div class="tilteRight">
        <span>Home ></span>
        <span style="padding-left: 4px">Edit Project</span>
    </div>
</div>
<div class="mainBody">
    <div class="form-add-pro">
        <form asp-action="EditProject" method="post" enctype="multipart/form-data">
            <input type="hidden" name="Id" value="@Model.Id" />

            <label for="proName">Project name</label>
            <input value="@(Model?.Name ?? string.Empty)" class="inputAddPro" type="text" id="proName" name="Name" placeholder="Project name...">
            <span asp-validation-for="Name" class="text-danger" style="color: red"></span>

            <label for="des">Description</label>
            <input value="@(Model?.Description ?? string.Empty)" class="inputAddPro" type="text" id="des" name="Description" placeholder="Description..">

            <label for="OwnerName">Owner Name</label>
            <input value="@(Model?.Owner ?? string.Empty)" class="inputAddPro" type="text" id="OwnerName" name="Owner" placeholder="Owner Name..">

            <label for="phone">Owner Telephone</label>
            <input value="@(Model?.OwnerTel ?? string.Empty)" class="inputAddPro" type="text" id="phone" name="OwnerTel" placeholder="Owner Telephone..">
            <span asp-validation-for="OwnerTel" class="text-danger" style="color: red"></span>

            <label for="TimeStart">Time Start:</label>
            <input value="@(Model?.TimeStart.ToString("yyyy-MM-dd") ?? string.Empty)" class="txtDate" type="date" id="TimeStart" name="TimeStart">
            <span asp-validation-for="TimeStart" class="text-danger" style="color: red"></span>

            <label for="TimeEnd">Time End:</label>
            <input value="@(Model?.TimeEnd.ToString("yyyy-MM-dd") ?? string.Empty)" class="txtDate" type="date" id="TimeEnd" name="TimeEnd">
            <span asp-validation-for="TimeEnd" class="text-danger" style="color: red"></span>
            <br>
            <label for="cate">Category Name</label>
            <select class="dropPro" id="cate" name="CauseId">
                @foreach (var item in ViewBag.Categories)
                {
                    <option value="@item.id" >@item.name</option>
                }
            </select>

            @if (Model.ProjectImages != null && Model.ProjectImages.Count > 0)
            {
                <div>
                    <h3>Project Images</h3>
                    @for (int i = 0; i < Model.ProjectImages.Count; i++)
                    {
                        <div>
                            <img src="~/imageProjects/@Model.ProjectImages[i].Image" alt="Image" style="max-width: 200px; max-height: 200px;" />
                            
                            <label>Edit Image</label>
                            <input type="file" asp-for="ProjectImages[i].NewImage" />
                            <input type="hidden" asp-for="ProjectImages[i].Id" />
                            <button type="button" class="btnXoaFile" data-id="@Model.ProjectImages[i].Id">Delete</button>
                        </div>
                    }
                </div>
            }
            
            <div id="fileInputsContainer">
                <div class="file-input-container">
                    <h3>Add new Image</h3>
                    <input class="image" type="file" name="Images">
                    <button type="button" class="btnThemFile">Add new file</button>
                </div>
            </div>

            <input class="btnAddPro" type="submit" value="Save">
        </form>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const fileInputsContainer = document.getElementById('fileInputsContainer');

        function addFileInput() {
            const newFileInput = document.createElement('input');
            newFileInput.setAttribute('type', 'file');
            newFileInput.setAttribute('class', 'image');
            newFileInput.setAttribute('name', 'Images');

            const deleteButton = document.createElement('button');
            deleteButton.type = 'button';
            deleteButton.textContent = 'Delete';
            deleteButton.classList.add('btnXoaFile');

            deleteButton.addEventListener('click', function () {
                newInputContainer.remove();
            });

            const newInputContainer = document.createElement('div');
            newInputContainer.classList.add('file-input-container');
            newInputContainer.appendChild(newFileInput);
            newInputContainer.appendChild(deleteButton);

            fileInputsContainer.appendChild(newInputContainer);
        }

        document.querySelector('.btnThemFile').addEventListener('click', function (event) {
            event.preventDefault();
            addFileInput();
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.btnXoaFile').forEach(button => {
            button.addEventListener('click', function () {
                const imageId = this.getAttribute('data-id');
                if (confirm('Are you sure you want to delete this image?')) {
                    fetch(`/Admin/DeleteImage/${imageId}`, {
                        method: 'POST',
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value,
                            'Content-Type': 'application/json'
                        }
                    })
                        .then(response => {
                            if (response.ok) {
                                this.parentElement.remove();
                            } else {
                                alert('Có lỗi xảy ra khi xóa ảnh.');
                            }
                        });
                }
            });
        });
    });

</script>
